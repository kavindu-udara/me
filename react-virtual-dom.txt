1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/me/_next/static/css/1d9abe454822820e.css","style"]
0:{"P":null,"b":"atdZIXSGzkPFBsJtwNKu0","p":"/me","c":["","react-virtual-dom"],"i":false,"f":[[["",{"children":[["slug","react-virtual-dom","d"],{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/me/_next/static/css/1d9abe454822820e.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_a48e27 __variable_c96e19 antialiased","children":[["$","div",null,{"className":"readme-view max-w-4xl mx-auto p-8"}],["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}]}]]}],{"children":[["slug","react-virtual-dom","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","$0:f:0:1:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","lBQkucnFyH6YR7k3SxTDc",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],null]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:I[5577,["479","static/chunks/795d4814-6ed8d3b2717688f6.js","711","static/chunks/8e1d74a4-cfd329457e90dfbc.js","528","static/chunks/528-65f71005039027ed.js","182","static/chunks/app/%5Bslug%5D/page-1ad8078ba5d2eeda.js"],"default"]
d:Taf5,
- The **Virtual DOM (VDOM)** is a lightweight in-memory representation of the real DOM.
- React uses the VDOM to manage updates efficiently without directly manipulating the real DOM.

---
### Key Concepts

- The actual structure rendered in the browser.
- Updating it is slow because it triggers reflows and repaints.

---
### How the Virtual DOM Works

- **Initial Render**:
    - React creates a VDOM representation of the UI.
    - The VDOM is then used to create the real DOM for the browser.
- **Updating State or Props**:
    - React creates a new VDOM tree based on the updated state/props.
    - It compares the new VDOM tree with the previous one (a process called **diffing**).
    - Only the differences (changes) are applied to the real DOM.
- **Efficient Updates**:
    - React batches multiple updates and applies them in one operation to minimize performance costs.

---

### Benefits of the Virtual DOM

- **Performance**:
    - Reduces direct interactions with the real DOM.
    - Optimizes updates by calculating the smallest number of changes.
- **Declarative UI**:
    - Developers focus on what the UI should look like, and React handles how to update the DOM.
- **Cross-Browser Compatibility**:
    - React abstracts browser-specific quirks in DOM manipulation.

---

### Real-Life Analogy

- Think of updating the DOM like editing a book.
- Instead of rewriting the entire book (real DOM), React keeps a draft copy (virtual DOM), compares the draft with the original, and only updates the changed parts.

---

### Virtual DOM Diffing Algorithm

- **Tree Comparison**: React compares the new VDOM tree with the old one.
- **Key-Based Optimization**:
    - Keys in lists help React identify moved or updated elements efficiently.
- **Minimal Updates**:
    - React calculates and applies only the minimal required changes to the real DOM.

---
### Example

```jsx
function App() {
    const [count, setCount] = React.useState(0);

    return (
        <div>
            <p>Count: {count}</p>
            <button onClick={() => setCount(count + 1)}>Increment</button>
        </div>
    );
}
```

When the button is clicked:

1. React updates the state (`count`).
2. React creates a new VDOM tree for `<App />`.
3. It compares the new tree with the old one.
4. Only the `<p>` element is updated in the real DOM.

---
### Summary

The Virtual DOM is a powerful feature of React that:

- Improves performance.
- Simplifies the UI development process.
- Provides a smooth and efficient user experience.

---
# References

- https://www.freecodecamp.org/news/what-is-the-virtual-dom-in-react/
- https://legacy.reactjs.org/docs/faq-internals.html
- https://www.geeksforgeeks.org/reactjs-virtual-dom/4:["$","$Lc",null,{"content":"$d","data":{"date":"$D2024-12-01T15:24:27.000Z","draft":false,"title":"React Virtual DOM"}}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Kavindu Udara"}],["$","meta","2",{"name":"description","content":"Kavindu Udara's blog"}],["$","link","3",{"rel":"icon","href":"/me/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
