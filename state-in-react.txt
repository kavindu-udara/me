1:"$Sreact.fragment"
2:I[8173,["173","static/chunks/173-ad05a37061268ac6.js","177","static/chunks/app/layout-869602401073e884.js"],""]
3:I[5244,[],""]
4:I[3866,[],""]
6:I[6213,[],"OutletBoundary"]
8:I[6213,[],"MetadataBoundary"]
a:I[6213,[],"ViewportBoundary"]
c:I[4835,[],""]
:HL["/me/_next/static/css/f3a5071fa6e1fc7f.css","style"]
:HL["/me/_next/static/css/12c033eb3dc8055a.css","style"]
0:{"P":null,"b":"zdGoX25WZNayspY0BG7Cj","p":"/me","c":["","state-in-react"],"i":false,"f":[[["",{"children":[["slug","state-in-react","d"],{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/me/_next/static/css/f3a5071fa6e1fc7f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_a48e27 __variable_c96e19 antialiased pt-24","children":[["$","header",null,{"className":"fixed top-0 left-0 w-full backdrop-blur-md p-4 z-20 rounded-b-lg","children":["$","div",null,{"className":"flex items-center justify-around w-full","children":[["$","div",null,{"className":"w-36","children":["$","$L2",null,{"href":"/","className":"text-xl gradient-text","children":"Kavindu Udara"}]}],["$","div",null,{"className":"flex justify-evenly w-1/2","children":["$","ul",null,{"className":"flex flex-wrap gap-8 font-semibold","children":[["$","li",null,{"className":"cursor-pointer gradient-text","children":["$","$L2",null,{"href":"/blogs","children":"blog"}]}],["$","li",null,{"children":["$","$L2",null,{"href":"/","children":"projects"}]}],["$","li",null,{"children":["$","$L2",null,{"href":"/","children":"Contact"}]}]]}]}],["$","div",null,{"className":"w-18 h-18 rounded-full bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 ","children":["$","img",null,{"className":"w-12 h-12 rounded-full border-2 border-transparent cursor-pointer","src":"https://avatars.githubusercontent.com/u/155027870?v=4","alt":"Kavindu Udara"}]}]]}]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],["$","div",null,{"className":"flex flex-col items-center justify-center h-screen text-center","children":[["$","h1",null,{"className":"text-3xl mb-1","children":"404 - Page Not Found"}],["$","p",null,{"children":"Oops! The page you are looking for does not exist."}],["$","$L2",null,{"href":"/","children":"Go back to Home"}]]}]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}]}]]}],{"children":[["slug","state-in-react","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$0:f:0:1:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",[["$","link","0",{"rel":"stylesheet","href":"/me/_next/static/css/12c033eb3dc8055a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L6",null,{"children":"$L7"}]]}],{},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","gMYzJANGt53ZkYqVdnekZ",{"children":[["$","$L8",null,{"children":"$L9"}],["$","$La",null,{"children":"$Lb"}],null]}]]}],false]],"m":"$undefined","G":["$c","$undefined"],"s":false,"S":true}
d:I[2442,["479","static/chunks/795d4814-6ed8d3b2717688f6.js","711","static/chunks/8e1d74a4-cfd329457e90dfbc.js","528","static/chunks/528-d64e9c3386053ccf.js","182","static/chunks/app/%5Bslug%5D/page-6ec12b92c78a2ff0.js"],"default"]
e:T8eb,
**State** is used to manage data that changes within a component. Unlike props, state is **mutable** and controlled by the component itself.

---
### Using the `useState` Hook

1. Import `useState`
	```jsx
	import { useState } from 'react';
	```

2. Initialize state
	```jsx
	const [count, setCount] = useState(0);
	```

3. Update state
	```jsx
	setCount(count + 1);
	```

---
### Example of State

```jsx
function Counter() {
    const [count, setCount] = useState(0);

    return (
        <div>
            <p>Count: {count}</p>
            <button onClick={() => setCount(count + 1)}>Increment</button>
        </div>
    );
}
```

---
### Updating and Managing State

1. Updating State
	- State updates are asynchronous. React batches multiple state updates for performance.
	- Use the previous state for calculations
	```jsx
	setCount((prevCount) => prevCount + 1);
	```

2. Managing Complex State
	- For objects or arrays, update using the spread operator
	```jsx
	const [user, setUser] = useState({ name: "John", age: 25 });
	setUser((prevUser) => ({ ...prevUser, age: 26 }));
	```

3. Conditional Rendering Based on State
	```jsx
	function Toggle() {
    const [isOn, setIsOn] = useState(false);

    return (
        <button onClick={() => setIsOn(!isOn)}>
            {isOn ? "ON" : "OFF"}
        </button>
	    );
	}
	```

4. State in Forms
	Manage input fields using state
	```jsx
	function Form() {
    const [name, setName] = useState("");

    return (
	        <input
	            type="text"
	            value={name}
	            onChange={(e) => setName(e.target.value)}
	        />
	    );
	}
	```

---
### Summary

|**Feature**|**Props**|**State**|
|---|---|---|
|**Mutability**|Immutable (read-only)|Mutable (can be updated)|
|**Scope**|Passed from parent to child|Local to the component|
|**Use Case**|Passing data between components|Managing dynamic, interactive data|
|**Example**|`<Child name="John" />`|`const [count, setCount] = useState(0)`|
- **Props** make components reusable by passing dynamic data.
- **State** manages component-specific data that changes over time.

---
# References

- https://www.freecodecamp.org/news/full-guide-to-react-hooks/5:["$","$Ld",null,{"content":"$e","data":{"date":"$D2024-12-01T16:01:26.000Z","draft":false,"title":"State in React"}}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Kavindu Udara"}],["$","meta","2",{"name":"description","content":"Kavindu Udara's blog"}],["$","link","3",{"rel":"icon","href":"/me/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
7:null
